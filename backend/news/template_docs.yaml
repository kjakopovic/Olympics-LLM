Resources:
  CreateNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Path: /
      Method: POST
    Metadata:
      BuildMethod: makefile
      Swagger:
        summary: Create new news for our site
        description: Create new news for our site, authorized only for admins
        operationId: createNews
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    id:
                      type: string
                    picture_urls:
                      type: array
                      urls:
                        type: string
          400:
            description: Validation error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          401:
            description: Unauthorized, expired or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          403:
            description: If your permissions are not strong enough you wont be able to use the endpoint
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          500:
            description: Unhandled exception, call developers
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  picture_count:
                    type: integer
                  tags:
                      type: array
                      tagsinlist:
                        type: string
                required:
                  - title
                  - description

  DeleteNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Path: /{news_id}
      Method: DELETE
    Metadata:
      BuildMethod: makefile
      Swagger:
        summary: Delete news from our site
        description: Delete news from our site with pictures also, authorized only for admins
        operationId: deleteNews
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          400:
            description: Validation error or invalid news id
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          401:
            description: Unauthorized, expired or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          403:
            description: If your permissions are not strong enough you wont be able to use the endpoint
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          404:
            description: News with that id not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          500:
            description: Unhandled exception, call developers
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "guid-type-of-id"

  UpdateNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Path: /{news_id}
      Method: PUT
    Metadata:
      BuildMethod: makefile
      Swagger:
        summary: Update news from our site
        description: Update news from our site with pictures also supported to be updated, authorized only for admins
        operationId: updateNews
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    urls:
                      type: array
                      urlsitems:
                        type: string
          400:
            description: Validation error or invalid news id
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          401:
            description: Unauthorized, expired or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          403:
            description: If your permissions are not strong enough you wont be able to use the endpoint
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          404:
            description: News with that id not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          500:
            description: Unhandled exception, call developers
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "guid-type-of-id"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  new_pictures_count:
                    type: integer
                  pictures_to_delete:
                      type: array
                      idsinlist:
                        type: string
                  tags:
                      type: array
                      tagsinlist:
                        type: string

  GetAllNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Path: /
      Method: GET
    Metadata:
      BuildMethod: makefile
      Swagger:
        summary: Get all news paginated
        description: Get all news paginated, if user is logged in he will have tags related news
        operationId: getAllNews
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    total_records_found:
                      type: integer
                    item_count:
                      type: integer
                    items:
                      type: array
                      news:
                        type: object
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          description:
                            type: string
                          published_at:
                            type: string
                          tags:
                            type: array
                            tagsinlist:
                              type: string
                          pictures_url:
                            type: array
                            picturesinlist:
                              type: object
                              properties:
                                key:
                                  type: string
                                url:
                                  type: string
          400:
            description: Validation error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          401:
            description: Unauthorized, expired or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          500:
            description: Unhandled exception, call developers
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        parameters:
          - in: query
            name: page
            required: false
            schema:
              type: integer
              example: 1
          - in: query
            name: limit
            required: false
            schema:
              type: integer
              example: 50

  GetNewsByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Path: /{news_id}
      Method: GET
    Metadata:
      BuildMethod: makefile
      Swagger:
        summary: Get news info by id
        description: Get news info by id
        operationId: getNewsById
        responses:
          200:
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    info:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        published_at:
                          type: string
                        tags:
                          type: array
                          tagsinlist:
                            type: string
                        pictures_url:
                          type: array
                          picturesinlist:
                            type: object
                            properties:
                              key:
                                type: string
                              url:
                                type: string
          400:
            description: Validation error or invalid news id
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          404:
            description: News with that id not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          500:
            description: Unhandled exception, call developers
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "guid-type-of-id"
